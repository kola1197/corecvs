/**
 * \file harrisDetectionParameters.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 * Generated from parameters.xml
 */

#include <vector>
#include <stddef.h>
#include "harrisDetectionParameters.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
#if 0
template<>
Reflection BaseReflection<HarrisDetectionParameters>::reflection = Reflection();
template<>
int BaseReflection<HarrisDetectionParameters>::dummy = HarrisDetectionParameters::staticInit();
#endif
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN


using namespace corecvs;

int HarrisDetectionParameters::staticInit(corecvs::Reflection *toFill)
{
    if (toFill == NULL || toFill->objectSize != 0) {
        SYNC_PRINT(("staticInit(): Contract Violation in <HarrisDetectionParameters>\n"));
         return -1;
    }

    toFill->name = ReflectionNaming(
        "harris Detection Parameters",
        "harris Detection Parameters",
        ""
    );

     toFill->objectSize = sizeof(HarrisDetectionParameters);
     

    DoubleField* field0 = new DoubleField
        (
          HarrisDetectionParameters::SCALER_ID,
          offsetof(HarrisDetectionParameters, mScaler),
          1000,
          "scaler",
          "scaler",
          "scaler"
        );
    field0->widgetHint=BaseField::SPIN_BOX;
    field0->precision=2;
    toFill->fields.push_back(field0);
    /*  */ 
    IntField* field1 = new IntField
        (
          HarrisDetectionParameters::APPERTURE_ID,
          offsetof(HarrisDetectionParameters, mApperture),
          5,
          "apperture",
          "apperture",
          "apperture"
        );
    toFill->fields.push_back(field1);
    /*  */ 
    ReflectionDirectory &directory = *ReflectionDirectoryHolder::getReflectionDirectory();
    directory[std::string("harris Detection Parameters")]= toFill;
   return 0;
}
int HarrisDetectionParameters::relinkCompositeFields()
{
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


