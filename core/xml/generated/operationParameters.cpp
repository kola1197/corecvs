/**
 * \file operationParameters.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 * Generated from filterBlock.xml
 */

#include <vector>
#include <stddef.h>
#include "operationParameters.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
#if 0
template<>
Reflection BaseReflection<OperationParameters>::reflection = Reflection();
template<>
int BaseReflection<OperationParameters>::dummy = OperationParameters::staticInit();
#endif
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN


using namespace corecvs;

int OperationParameters::staticInit(corecvs::Reflection *toFill)
{
    if (toFill == NULL || toFill->objectSize != 0) {
        SYNC_PRINT(("staticInit(): Contract Violation in <OperationParameters>\n"));
         return -1;
    }

    toFill->name = ReflectionNaming(
        "Operation Parameters",
        "Operation Parameters",
        ""
    );

     toFill->objectSize = sizeof(OperationParameters);
     

    EnumField* field0 = new EnumField
        (
          OperationParameters::OPERATION_ID,
          offsetof(OperationParameters, mOperation),
          0,
          "operation",
          "operation",
          "operation",
          new EnumReflection(6
          , new EnumOption(0,"First")
          , new EnumOption(1,"Second")
          , new EnumOption(2,"Add")
          , new EnumOption(3,"Subtract")
          , new EnumOption(4,"Min")
          , new EnumOption(5,"Max")
          )
        );
    field0->widgetHint=BaseField::COMBO_BOX;
    toFill->fields.push_back(field0);
    /*  */ 
    ReflectionDirectory &directory = *ReflectionDirectoryHolder::getReflectionDirectory();
    directory[std::string("Operation Parameters")]= toFill;
   return 0;
}
int OperationParameters::relinkCompositeFields()
{
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


